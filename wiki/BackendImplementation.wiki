This part is left to the end-user to develop the backend. You can choose any technologies like PHP, ASP, Java, or even CGI to process the file uploads and authentication.

Here we only discuss the requirements to implement a backend for this client program.


==BASICS==

Webftp client uses a multipart HTTP POST request to the server with the following variables in the post:
{{{
	POST-FILE:	<base64 encoded data>
	CONTENT-TYPE:   multipart/form-data
}}}

The server should implement a RESTful API which accepts the following variable in URL:
{{{

	username	The username to be used for authentication (Required)
	password	The password to be used for authentication (Required)
	subfolder	The destination subfolder (Optional)

}}}

==ENDPOINT URL==

An example of an URL endpoint is as followed:

	https://127.0.0.1/Upload?username=test&password=123&subfolder=abc


==RESPONSE DATA==

Currently, response data from server is not being processed and is only being output 
to the console. However, it is possible to parse the response data easily if retuned in
JSON format.